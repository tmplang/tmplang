#ifndef DIAG
#define DIAG(ID, SEV, MSG)
#endif

#ifndef ERROR
#define ERROR(ID, MSG) DIAG(err_##ID, DiagnosticSeverity::Error, MSG)
#endif

#ifndef WARN
#define WARN(ID, MSG) DIAG(ID, DiagnosticSeverity::Warning, MSG)
#endif

ERROR(found_unknown_token,                     "found unexpected token")
ERROR(missing_arrow,                           "missing type arrow")
ERROR(missing_comma,                           "missing needed comma between parameters")
ERROR(missing_comma_prior_tuple_param,         "missing comma before next tuple parameter")
ERROR(missing_colon,                           "missing needed colon before start of parameter list")
ERROR(missing_expression_after_ret_keyword,    "missing expression after ret keyword")
ERROR(missing_left_key_brace,                  "missing left key brace")
ERROR(missing_left_parenthesis_opening_tuple,  "missing left parenthesis opening tuple")
ERROR(missing_right_key_brace,                 "missing right key brace")
ERROR(missing_right_parenthesis_closing_tuple, "missing right parenthesis closing tuple")
ERROR(missing_semicolon_after_expr,            "missing semicolon")
ERROR(missing_subprogram_class,                "missing subprogram classification on subprogram definition")
ERROR(missing_subprogram_id,                   "missing subprogram identifier")
ERROR(missing_type,                            "missing type")
ERROR(missing_type_pior_variable,              "missing type of variable")
ERROR(missing_variable_identifier_after_type,  "missing variable identifier after type")

#undef WARN
#undef ERROR
#undef DIAG
